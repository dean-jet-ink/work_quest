version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@2.2.1
  docker: circleci/docker@2.0.1

jobs:
  test_client:
    docker:
      - image: node:16.13.2-alpine
    working_directory: ~/portfolio_work_quest/client
    steps:
      - checkout:
          path: ~/portfolio_work_quest
      - run:
          name: test_client
          command: |
            npm i
            npm test

  test_server:
    machine:
      image: circleci/classic:edge
    working_directory: ~/portfolio_work_quest
    steps:
      - checkout
      - docker/install-docker-compose
      - run:
          name: test_server
          command: docker-compose -f unit-test.yml up --abort-on-container-exit --exit-code-from test_server

  deploy:
    jobs:
      build-and-deploy-client:
        working_directory: ~/portfolio_work_quest
          steps:
            - checkout
            - command: cd ./client
            - aws-ecr/build-and-push-image:
                account-url: AWS_ECR_ACCOUNT_URL
                aws-access-key-id: AWS_ACCESS_KEY_ID
                aws-secret-access-key: AWS_SECRET_ACCESS_KEY
                region: AWS_DEFAULT_REGION
                repo: "${AWS_RESOURCE_NAME_PREFIX}-client"
                tag: "${CIRCLE_SHA1}"
            - aws-ecs/deploy-service-update:
                requires:
                  - aws-ecr/build-and-push-image
                family: "${AWS_RESOURCE_NAME_PREFIX}-task"
                cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
                service-name: "${AWS_RESOURCE_NAME_PREFIX}"
                container-image-name-updates: "container=client,tag=${CIRCLE_SHA1}"

      build-and-deploy-server:
        working_directory: ~/portfolio_work_quest
          steps:
            - checkout
            - command: cd ./server
            - aws-ecr/build-and-push-image:
                account-url: AWS_ECR_ACCOUNT_URL
                aws-access-key-id: AWS_ACCESS_KEY_ID
                aws-secret-access-key: AWS_SECRET_ACCESS_KEY
                region: AWS_DEFAULT_REGION
                repo: "${AWS_RESOURCE_NAME_PREFIX}-server"
                tag: "${CIRCLE_SHA1}"
            - aws-ecs/deploy-service-update:
                requires:
                  - aws-ecr/build-and-push-image
                family: "${AWS_RESOURCE_NAME_PREFIX}-task"
                cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
                service-name: "${AWS_RESOURCE_NAME_PREFIX}"
                container-image-name-updates: "container=server,tag=${CIRCLE_SHA1}"

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test_client
      - test_server
      - deploy:
        require:
          - test_client
          - test_server
        filters:
          branches:
            only: master
