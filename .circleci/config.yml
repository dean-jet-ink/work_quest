version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@2.2.1
  docker: circleci/docker@2.0.1

jobs:
  test_client: #client containerのテスト
    docker:
      - image: node:16.13.2-alpine
    working_directory: ~/work_quest/client
    steps:
      - checkout:
          path: ~/work_quest
      - run:
          name: test_client
          command: |
            npm i
            npm test

  test_server: #server containerのテスト
    machine:
      image: circleci/classic:edge
    working_directory: ~/work_quest
    steps:
      - checkout
      - docker/install-docker-compose
      - run:
          name: test_server
          command: docker-compose -f unit-test.yml up --abort-on-container-exit --exit-code-from test_server

  build-and-push-client: #ECRへ、client imageのpush
    machine:
      image: circleci/classic:edge
    working_directory: ~/work_quest/client
    steps:
      - checkout:
          path: ~/work_quest
      # - aws-cli/install:
      #     override-installed: true
      - aws-ecr/build-and-push-image:
          dockerfile: Dockerfile.prod
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_REGION
          repo: "${AWS_RESOURCE_NAME_PREFIX}-client"
          tag: "${CIRCLE_SHA1}"

  build-and-push-server: #ECRへ、server imageのpush
    machine:
      image: circleci/classic:edge
    working_directory: ~/work_quest/server
    steps:
      - checkout:
          path: ~/work_quest
      # - aws-cli/install:
      #     override-installed: true
      - aws-ecr/build-and-push-image:
          dockerfile: Dockerfile.prod
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_REGION
          repo: "${AWS_RESOURCE_NAME_PREFIX}-server"
          tag: "${CIRCLE_SHA1}"

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test_client
      - test_server
      - build-and-push-client:
          requires:
            - test_client
            - test_server
          filters:
            branches:
              only: deploy
      - build-and-push-server:
          requires:
            - test_client
            - test_server
          filters:
            branches:
              only: deploy
      - aws-ecs/deploy-service-update: #ECSにおけるclient containerの元image更新
          requires:
            - build-and-push-client
          family: "${AWS_RESOURCE_NAME_PREFIX}-task"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
          service-name: "${AWS_RESOURCE_NAME_PREFIX}"
          container-image-name-updates: "container=client,tag=${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update: #ECSにおけるserver containerの元image更新
          requires:
            - build-and-push-server
          family: "${AWS_RESOURCE_NAME_PREFIX}-task"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
          service-name: "${AWS_RESOURCE_NAME_PREFIX}"
          container-image-name-updates: "container=server,tag=${CIRCLE_SHA1}"
